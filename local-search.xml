<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>PTA | Doing Homework again</title>
    <link href="/2023/10/17/PTA-Doing-Homework-again/"/>
    <url>/2023/10/17/PTA-Doing-Homework-again/</url>
    
    <content type="html"><![CDATA[<p>Ignatius has just come back school from the 30th ACM&#x2F;ICPC. Now he has a lot of homework to do. Every teacher gives him a deadline of handing in the homework. If Ignatius hands in the homework after the deadline, the teacher will reduce his score of the final test. And now we assume that doing everyone homework always takes one day. So Ignatius wants you to help him to arrange the order of doing homework to minimize the reduced score.<br>Ignatius 刚刚从第 30 届 ACM&#x2F;ICPC 回到学校。 现在他有很多作业要做。 每个老师都给他规定了交作业的截止日期。 如果 Ignatius 在截止日期后交作业，老师将降低他期末考试的分数。 现在我们假设做每个人的作业总是需要一天的时间。 所以 Ignatius 希望你帮他安排一下做作业的顺序，尽量减少分数的降低。</p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h1><p>The input contains several test cases. The first line of the input is a single integer T that is the number of test cases. T test cases follow.<br>Each test case start with a positive integer N(1&lt;&#x3D;N&lt;&#x3D;1000) which indicate the number of homework.. Then 2 lines follow. The first line contains N integers that indicate the deadlines of the subjects, and the next line contains N integers that indicate the reduced scores.<br>输入包含多个测试用例。 输入的第一行是一个整数 T，它是测试用例的数量。 T 测试用例如下。<br>每个测试用例都以正整数 N(1&lt;&#x3D;N&lt;&#x3D;1000) 开头，表示作业的数量。然后是 2 行。 第一行包含 N 个整数，表示科目的截止日期，下一行包含 N 个整数，表示减少的分数。</p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h1><p>For each test case, you should output the smallest total reduced score, one line per test case.<br>对于每个测试用例，您应该输出最小的总降低分数，每个测试用例一行。</p><h1 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h1><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-number">3</span><br><span class="hljs-number">3</span><br><span class="hljs-symbol">3 </span><span class="hljs-number">3</span> <span class="hljs-number">3</span><br><span class="hljs-symbol">10 </span><span class="hljs-number">5</span> <span class="hljs-number">1</span><br><span class="hljs-number">3</span><br><span class="hljs-symbol">1 </span><span class="hljs-number">3</span> <span class="hljs-number">1</span><br><span class="hljs-symbol">6 </span><span class="hljs-number">2</span> <span class="hljs-number">3</span><br><span class="hljs-number">7</span><br><span class="hljs-symbol">1 </span><span class="hljs-number">4</span> <span class="hljs-number">6</span> <span class="hljs-number">4</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">3</span><br><span class="hljs-symbol">3 </span><span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">7</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><h1 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">0<br>3<br>5<br></code></pre></td></tr></table></figure><h1 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h1><p>因为要使扣的分数最小，所以需要使延时提交的作业数最少。所以要优先完成时间早的作业。所以我先进行一个排序算法，将所有的作业按照deadline从小到大排序。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">sort</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> homework *homework,<span class="hljs-type">int</span> N)</span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;N-i<span class="hljs-number">-1</span>;j++)&#123;<br>            <span class="hljs-keyword">if</span>((homework+j)-&gt;deadline&gt;(homework+j+<span class="hljs-number">1</span>)-&gt;deadline)&#123;<br>                swap(&amp;(homework+j)-&gt;score,&amp;(homework+j+<span class="hljs-number">1</span>)-&gt;score);<br>                swap(&amp;(homework+j)-&gt;deadline,&amp;(homework+j+<span class="hljs-number">1</span>)-&gt;deadline);<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((homework+j)-&gt;deadline=(homework+j+<span class="hljs-number">1</span>)-&gt;deadline &amp;&amp; (homework+j)-&gt;score&lt;(homework+j+<span class="hljs-number">1</span>)-&gt;score)&#123;<br>                swap(&amp;(homework+j)-&gt;score,&amp;(homework+j+<span class="hljs-number">1</span>)-&gt;score);<br>                swap(&amp;(homework+j)-&gt;deadline,&amp;(homework+j+<span class="hljs-number">1</span>)-&gt;deadline);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>当然，完全按照deadline也是错误的，例如：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">4</span> <span class="hljs-number">6</span> <span class="hljs-number">4</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">3</span><br><span class="hljs-symbol">3 </span><span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">7</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p>完成排序后变成了：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">4</span> <span class="hljs-number">4</span> <span class="hljs-number">6</span><br><span class="hljs-symbol">3 </span><span class="hljs-number">6</span> <span class="hljs-number">4</span> <span class="hljs-number">7</span> <span class="hljs-number">5</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>此时严格按照deadline排序输出结果是错误的。我们发现如果我们第一天不完成第一个作业，扣的分数反而会更小。所以前面的想法其实不完全正确。</p><p>我们需要的是扣的分数最小，所以我们可以优先考虑分数。</p><p>那我们先对分数进行排序，如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">sort</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> homework *homework,<span class="hljs-type">int</span> N)</span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;N-i<span class="hljs-number">-1</span>;j++)&#123;<br>            <span class="hljs-keyword">if</span>((homework+j)-&gt;score&lt;(homework+j+<span class="hljs-number">1</span>)-&gt;score)&#123;<br>                swap(&amp;(homework+j)-&gt;score,&amp;(homework+j+<span class="hljs-number">1</span>)-&gt;score);<br>                swap(&amp;(homework+j)-&gt;deadline,&amp;(homework+j+<span class="hljs-number">1</span>)-&gt;deadline);<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((homework+j)-&gt;deadline&lt;(homework+j+<span class="hljs-number">1</span>)-&gt;deadline &amp;&amp; (homework+j)-&gt;score==(homework+j+<span class="hljs-number">1</span>)-&gt;score)&#123;<br>                swap(&amp;(homework+j)-&gt;score,&amp;(homework+j+<span class="hljs-number">1</span>)-&gt;score);<br>                swap(&amp;(homework+j)-&gt;deadline,&amp;(homework+j+<span class="hljs-number">1</span>)-&gt;deadline);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>进行如上排序后我们会获得下面的结果：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-number">4</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">3</span> <span class="hljs-number">1</span> <span class="hljs-number">4</span> <span class="hljs-number">6</span><br><span class="hljs-number">7</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">4</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>然后我们根据score的权重，把作业“放入”我们需要完成的日子。</p><p>当遇到分数相同的，根据日期，我在前面排列时把日期大的放在了待处理队列中相同分数的靠前位置，所以会优先处理。如果在处理时发现该日期已经被占用，那么顺应往前面未被占用的日期处移动，这样能保证该作业能一定能完成。</p><p>下面是分步结果：（前面的一列0是用于占位，可以忽略）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c"><br><span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">0</span> <br><span class="hljs-number">0</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">2</span> <span class="hljs-number">7</span> <span class="hljs-number">0</span> <br><br><span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">0</span> <br><span class="hljs-number">0</span> <span class="hljs-number">6</span> <span class="hljs-number">6</span> <span class="hljs-number">2</span> <span class="hljs-number">7</span> <span class="hljs-number">0</span> <br><br><span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">4</span> <span class="hljs-number">0</span> <br><span class="hljs-number">0</span> <span class="hljs-number">6</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">7</span> <span class="hljs-number">0</span> <br><br><span class="hljs-number">0</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">4</span> <span class="hljs-number">0</span> <br><span class="hljs-number">0</span> <span class="hljs-number">4</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">7</span> <span class="hljs-number">0</span> <br><br><span class="hljs-number">0</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">4</span> <span class="hljs-number">0</span> <br><span class="hljs-number">0</span> <span class="hljs-number">4</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">7</span> <span class="hljs-number">0</span> <br><br><span class="hljs-number">0</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">4</span> <span class="hljs-number">0</span> <br><span class="hljs-number">0</span> <span class="hljs-number">4</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">7</span> <span class="hljs-number">0</span> <br><br><span class="hljs-number">0</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">4</span> <span class="hljs-number">6</span> <br><span class="hljs-number">0</span> <span class="hljs-number">4</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">7</span> <span class="hljs-number">1</span> <br></code></pre></td></tr></table></figure><p>然后剩余的未完成的作业加起来的分数就是最小的会被扣掉的分数。</p><h1 id="源码实现："><a href="#源码实现：" class="headerlink" title="源码实现："></a>源码实现：</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">homework</span>&#123;</span><br>    <span class="hljs-type">int</span> deadline;<br>    <span class="hljs-type">int</span> score;<br>    <span class="hljs-type">int</span> availible;<br>&#125;;<br><span class="hljs-type">void</span> <span class="hljs-title function_">swap</span><span class="hljs-params">(<span class="hljs-type">int</span> *a,<span class="hljs-type">int</span> *b)</span>&#123;<br>    <span class="hljs-type">int</span> t=*a;<br>    *a=*b;<br>    *b=t;<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">sort</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> homework *homework,<span class="hljs-type">int</span> N)</span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;N-i<span class="hljs-number">-1</span>;j++)&#123;<br>            <span class="hljs-keyword">if</span>((homework+j)-&gt;score&lt;(homework+j+<span class="hljs-number">1</span>)-&gt;score)&#123;<br>                swap(&amp;(homework+j)-&gt;score,&amp;(homework+j+<span class="hljs-number">1</span>)-&gt;score);<br>                swap(&amp;(homework+j)-&gt;deadline,&amp;(homework+j+<span class="hljs-number">1</span>)-&gt;deadline);<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>((homework+j)-&gt;deadline&lt;(homework+j+<span class="hljs-number">1</span>)-&gt;deadline &amp;&amp; (homework+j)-&gt;score==(homework+j+<span class="hljs-number">1</span>)-&gt;score)&#123;<br>                swap(&amp;(homework+j)-&gt;score,&amp;(homework+j+<span class="hljs-number">1</span>)-&gt;score);<br>                swap(&amp;(homework+j)-&gt;deadline,&amp;(homework+j+<span class="hljs-number">1</span>)-&gt;deadline);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> T;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;T);<br>    <span class="hljs-keyword">while</span>(T--)&#123;<br>        <span class="hljs-type">int</span> N;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;N);<br>        <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">homework</span> <span class="hljs-title">homework</span>[1001];</span><br>        <span class="hljs-type">int</span> max_date=<span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> reduced_score=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)&#123;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;homework[i].deadline);<br>            <span class="hljs-keyword">if</span>(homework[i].deadline&gt;max_date)&#123;<br>                max_date=homework[i].deadline;  <span class="hljs-comment">//找最大的日期</span><br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)&#123;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;homework[i].score);<br>            reduced_score+=homework[i].score;<br>        &#125;<br>        sort(homework,N);<br>        <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">homework</span> <span class="hljs-title">schedule</span>[1001];</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=max_date;i++)&#123;<br>            schedule[i].availible=<span class="hljs-number">0</span>; <span class="hljs-comment">//1表示占用</span><br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)&#123;<br>            <span class="hljs-keyword">if</span>(schedule[homework[i].deadline].availible==<span class="hljs-number">0</span>)&#123;<br>                schedule[homework[i].deadline].deadline=homework[i].deadline;<br>                schedule[homework[i].deadline].score=homework[i].score;<br>                reduced_score-=homework[i].score;<br>                schedule[homework[i].deadline].availible=<span class="hljs-number">1</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=homework[i].deadline;j&gt;=<span class="hljs-number">1</span>;j--)&#123;<br>                    <span class="hljs-keyword">if</span>(schedule[j].availible==<span class="hljs-number">0</span>)&#123;<br>                        schedule[j].deadline=homework[i].deadline;<br>                        schedule[j].score=homework[i].score;<br>                        reduced_score-=homework[i].score;<br>                        schedule[j].availible=<span class="hljs-number">1</span>;<br>                        <span class="hljs-keyword">break</span>;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,reduced_score);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><!-- ```c#include<stdio.h>struct homework{    int deadline;    int score;    int availible;};void swap(int *a,int *b){    int t=*a;    *a=*b;    *b=t;}void sort(struct homework *homework,int N){    for(int i=0;i<N;i++){        for(int j=0;j<N-i-1;j++){            if((homework+j)->score<(homework+j+1)->score){                swap(&(homework+j)->score,&(homework+j+1)->score);                swap(&(homework+j)->deadline,&(homework+j+1)->deadline);            }else if((homework+j)->deadline<(homework+j+1)->deadline && (homework+j)->score==(homework+j+1)->score){                swap(&(homework+j)->score,&(homework+j+1)->score);                swap(&(homework+j)->deadline,&(homework+j+1)->deadline);            }        }    }}int main(){    int T;    scanf("%d",&T);    while(T--){        int N;        scanf("%d",&N);        struct homework homework[1001];        int max_date=0;        int reduced_score=0;        for(int i=0;i<N;i++){            scanf("%d",&homework[i].deadline);            if(homework[i].deadline>max_date){                max_date=homework[i].deadline;  //找最大的日期            }        }        for(int i=0;i<N;i++){            scanf("%d",&homework[i].score);            reduced_score+=homework[i].score;        }        //printf("%d\n",reduced_score); //debug        sort(homework,N);                // debug        // for(int i=0;i<N;i++){        //     printf(" %d ",homework[i].deadline);        // }        // printf("\n");        // for(int i=0;i<N;i++){        //     printf(" %d ",homework[i].score);        // }        // printf("\n");        struct homework schedule[1001];        for(int i=0;i<=max_date;i++){            schedule[i].availible=0; //1表示占用        }        //int not_finished=max_date;        for(int i=0;i<N;i++){            if(schedule[homework[i].deadline].availible==0){                schedule[homework[i].deadline].deadline=homework[i].deadline;                schedule[homework[i].deadline].score=homework[i].score;                reduced_score-=homework[i].score;                schedule[homework[i].deadline].availible=1;            }else{                for(int j=homework[i].deadline;j>=1;j--){                    if(schedule[j].availible==0){                        schedule[j].deadline=homework[i].deadline;                        schedule[j].score=homework[i].score;                        reduced_score-=homework[i].score;                        schedule[j].availible=1;                        break;                    }                }            }            // printf("*%d*%d*\n",i,reduced_score);            // for(int i=0;i<max_date;i++){            //     printf("%d ",schedule[i].deadline);            // }            // printf("\n");            // for(int i=0;i<max_date;i++){            //     printf("%d ",schedule[i].score);            // }            // printf("\n");            // for(int i=0;i<max_date;i++){            //     printf("%d ",schedule[i].availible);            // }            // printf("\n");        }        printf("%d\n",reduced_score);    }    return 0;}// 1 4 6 4 2 4 3// 3 2 1 7 6 5 4// 1 2 3 4 4 4 6// 3 6 4 7 5 2 1// 4 2 4 3 1 4 6// 7 6 5 4 3 2 1// 2 3 4 4 6 1 4// 6 4 7 5 1 3 2``` -->]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>PTA | FatMouse&#39; Trade</title>
    <link href="/2023/10/17/PTA-FatMouse-Trade/"/>
    <url>/2023/10/17/PTA-FatMouse-Trade/</url>
    
    <content type="html"><![CDATA[<p>FatMouse prepared M pounds of cat food, ready to trade with the cats guarding the warehouse containing his favorite food, JavaBean. The warehouse has N rooms. The i-th room contains J[i] pounds of JavaBeans and requires F[i] pounds of cat food. FatMouse does not have to trade for all the JavaBeans in the room, instead, he may get J[i]* a% pounds of JavaBeans if he pays F[i]* a% pounds of cat food. Here a is a real number. Now he is assigning this homework to you: tell him the maximum amount of JavaBeans he can obtain.</p><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h1><p>The input consists of multiple test cases. Each test case begins with a line containing two non-negative integers M and N. Then N lines follow, each contains two non-negative integers J[i] and F[i] respectively. The last test case is followed by two -1’s. All integers are not greater than 1000.</p><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h1><p>For each test case, print in a single line a real number accurate up to 3 decimal places, which is the maximum amount of JavaBeans that FatMouse can obtain.</p><h1 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h1><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs subunit">5 3<br>7 2<br>4 3<br>5 2<br>20 3<br>25 18<br>24 15<br>15 10<br><span class="hljs-string">-1</span> <span class="hljs-string">-1</span><br></code></pre></td></tr></table></figure><h1 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h1><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">13</span>.<span class="hljs-number">333</span><br><span class="hljs-attribute">31</span>.<span class="hljs-number">500</span><br></code></pre></td></tr></table></figure><h1 id="错误代码示例："><a href="#错误代码示例：" class="headerlink" title="错误代码示例："></a>错误代码示例：</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> M,N;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;M,&amp;N);<br>    <span class="hljs-type">int</span> J[<span class="hljs-number">100</span>]; <span class="hljs-comment">//回报</span><br>    <span class="hljs-type">int</span> F[<span class="hljs-number">100</span>]; <span class="hljs-comment">//付出</span><br>    <span class="hljs-type">double</span> s[<span class="hljs-number">100</span>];<br>    <span class="hljs-keyword">while</span>(M!=<span class="hljs-number">-1</span> &amp;&amp; N!=<span class="hljs-number">-1</span>)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)&#123;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,J+i,F+i);<br>            s[i]=<span class="hljs-number">1.0</span>*J[i]/F[i];<br>        &#125;<br>        <span class="hljs-type">double</span> max;<br>        <span class="hljs-type">int</span> cur;<br>        <span class="hljs-type">double</span> ans=<span class="hljs-number">0.0</span>;<br>        <span class="hljs-keyword">while</span>(M&gt;<span class="hljs-number">0</span>)&#123;<br>            max=<span class="hljs-number">0.0</span>;<br>            cur=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)&#123; <span class="hljs-comment">//找到回报率最大的位置</span><br>                <span class="hljs-keyword">if</span>(s[i]&gt;max)&#123;<br>                    max=s[i];<br>                    cur=i;<br>                &#125;<br>            &#125;<br>            s[cur]=<span class="hljs-number">0.0</span>;<br>            <span class="hljs-keyword">if</span>(M&gt;=F[cur])&#123;<br>                M-=F[cur];<br>                ans+=J[cur];<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                ans+=J[cur]*(<span class="hljs-number">1.0</span>*M/F[cur]);<br>                M=<span class="hljs-number">0</span>;<br>            &#125;<br>            <span class="hljs-comment">//printf(&quot;*%d*%lf*\n&quot;,cur,ans);  DEBUG</span><br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.3lf\n&quot;</span>,ans);<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;M,&amp;N);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="正确代码示例："><a href="#正确代码示例：" class="headerlink" title="正确代码示例："></a>正确代码示例：</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> M,N;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;M,&amp;N);<br>    <span class="hljs-type">int</span> J[<span class="hljs-number">1001</span>]; <span class="hljs-comment">//回报</span><br>    <span class="hljs-type">int</span> F[<span class="hljs-number">1001</span>]; <span class="hljs-comment">//付出</span><br>    <span class="hljs-type">double</span> s[<span class="hljs-number">1001</span>];<br>    <span class="hljs-keyword">while</span>(M!=<span class="hljs-number">-1</span> &amp;&amp; N!=<span class="hljs-number">-1</span>)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)&#123;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,J+i,F+i);<br>            s[i]=<span class="hljs-number">1.0</span>*J[i]/F[i];<br>        &#125;<br>        <span class="hljs-type">double</span> max;<br>        <span class="hljs-type">int</span> cur;<br>        <span class="hljs-type">double</span> ans=<span class="hljs-number">0.0</span>;<br>        <span class="hljs-type">int</span> items=N;<br>        <span class="hljs-keyword">while</span>(M&gt;<span class="hljs-number">0</span> &amp;&amp; N&gt;<span class="hljs-number">0</span>)&#123;<br>            max=<span class="hljs-number">0.0</span>;<br>            cur=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)&#123; <span class="hljs-comment">//找到回报率最大的位置</span><br>                <span class="hljs-keyword">if</span>(s[i]&gt;max)&#123;<br>                    max=s[i];<br>                    cur=i;<br>                &#125;<br>            &#125;<br>            s[cur]=<span class="hljs-number">0.0</span>;<br>            <span class="hljs-keyword">if</span>(M&gt;=F[cur])&#123;<br>                M-=F[cur];<br>                ans+=J[cur];<br>                items--;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                ans+=J[cur]*(<span class="hljs-number">1.0</span>*M/F[cur]);<br>                M=<span class="hljs-number">0</span>;<br>            &#125;<br>            <span class="hljs-comment">//printf(&quot;*%d*%lf*\n&quot;,cur,ans);  DEBUG</span><br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.3lf\n&quot;</span>,ans);<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;M,&amp;N);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/10/17/hello-world/"/>
    <url>/2023/10/17/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
